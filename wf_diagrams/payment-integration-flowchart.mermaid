flowchart TD
    subgraph ReminderSystem["Reminder System"]
        RP["Reminder Processing"] --> PL["Payment Link<br>Generation"]
    end

    subgraph PaymentService["Payment Service"]
        PL --> PConfig["Payment Configuration<br>by Business"]
        PConfig --> PLGenerator["Payment Link Generator"]
        
        PConfig --> RateConfig["Rate Configuration:<br>- Fixed amounts<br>- Percentage fees<br>- Tax calculations"]
        
        PLGenerator --> DynamicLinks["Dynamic Links"]
        PLGenerator --> PresetLinks["Preset Product Links"]
        
        DynamicLinks & PresetLinks --> TokenGen["Payment Token<br>Generation"]
        TokenGen --> URLGen["URL Generation"]
        URLGen --> ShortURLGen["URL Shortening<br>(Optional)"]
        
        PMetadata["Payment Metadata:<br>- Client ID<br>- Business ID<br>- Invoice/Reference<br>- Expiration date<br>- Reminder ID"]
        
        TokenGen --> PMetadata
    end

    subgraph ExternalPaymentProviders["External Payment Providers"]
        StripeInteg["Stripe Integration"] --> StripeAPI["Stripe API:<br>- Payment Intents<br>- Checkout Sessions<br>- Customers<br>- Products"]
        
        PayPalInteg["PayPal Integration<br>(Optional)"] --> PayPalAPI["PayPal API"]
        
        OtherInteg["Other Payment Gateways<br>(Optional)"] --> OtherAPI["Other APIs"]
    end

    subgraph PaymentWebhooks["Payment Webhooks"]
        WebhookEndpoint["Webhook Endpoint<br>/api/webhooks/payments"] --> WebhookAuth["Webhook Authentication<br>& Verification"]
        WebhookAuth --> PayloadProcess["Payload Processing"]
        PayloadProcess --> EventRouter["Event Router"]
        
        EventRouter --> SuccessEvent["Success Events"]
        EventRouter --> FailureEvent["Failure Events"]
        EventRouter --> RefundEvent["Refund Events"]
        
        SuccessEvent & FailureEvent & RefundEvent --> BusinessNotif["Business Notification"]
        SuccessEvent & FailureEvent & RefundEvent --> StatusUpdate["Payment Status Update"]
        SuccessEvent --> InvoiceUpdate["Invoice Status Update"]
        SuccessEvent --> ReceiptGen["Receipt Generation"]
    end

    subgraph DataManagement["Payment Data Management"]
        PaymentRecords[(Payment Records)] <--> StatusUpdate
        InvoiceRecords[(Invoice Records)] <--> InvoiceUpdate
        ClientPaymentHistory[(Client Payment History)]
        BusinessPaymentHistory[(Business Payment History)]
        
        PaymentRecords --> ClientPaymentHistory
        PaymentRecords --> BusinessPaymentHistory
        
        ReconciliationSystem["Reconciliation System"] --> PaymentRecords
        ReconciliationSystem --> InvoiceRecords
    end

    subgraph ClientExperience["Client Payment Experience"]
        PaymentURL["Payment URL<br>in Notification"] --> PaymentPage["Payment Page<br>(Hosted by Provider)"]
        PaymentPage --> PaymentForm["Payment Form"]
        PaymentForm --> PaymentProcess["Payment Processing"]
        PaymentProcess --> PaymentResult["Payment Result"]
        PaymentResult --> ClientReceipt["Client Receipt<br>Delivery"]
        
        PaymentResult -.-> WebhookEndpoint
    end

    PL --> URLGen
    PLGenerator --> StripeInteg & PayPalInteg & OtherInteg
    StripeAPI & PayPalAPI & OtherAPI --> WebhookEndpoint
