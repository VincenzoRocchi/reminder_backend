"""Create initial tables

Revision ID: 7a761fa904bb
Revises: 
Create Date: 2025-03-25 00:05:43.945764

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7a761fa904bb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_table('service_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('service_type', sa.Enum('EMAIL', 'SMS', 'WHATSAPP', name='servicetypeenum'), nullable=False),
    sa.Column('service_name', sa.String(length=255), nullable=False),
    sa.Column('smtp_host', sa.String(length=255), nullable=True),
    sa.Column('smtp_port', sa.Integer(), nullable=True),
    sa.Column('smtp_user', sa.String(length=255), nullable=True),
    sa.Column('smtp_password', sa.String(length=500), nullable=True),
    sa.Column('email_from', sa.String(length=255), nullable=True),
    sa.Column('twilio_account_sid', sa.String(length=255), nullable=True),
    sa.Column('twilio_auth_token', sa.String(length=500), nullable=True),
    sa.Column('twilio_phone_number', sa.String(length=20), nullable=True),
    sa.Column('whatsapp_api_key', sa.String(length=500), nullable=True),
    sa.Column('whatsapp_api_url', sa.String(length=255), nullable=True),
    sa.Column('whatsapp_phone_number', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_accounts_id'), 'service_accounts', ['id'], unique=False)
    op.create_table('reminder_recipients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reminder_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['reminder_id'], ['reminders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reminder_id', 'client_id', name='unique_reminder_client')
    )
    op.create_index(op.f('ix_reminder_recipients_id'), 'reminder_recipients', ['id'], unique=False)
    op.drop_index('ix_customers_email', table_name='customers')
    op.drop_index('ix_customers_id', table_name='customers')
    op.drop_index('ix_customers_last_name', table_name='customers')
    op.drop_index('ix_customers_name', table_name='customers')
    op.drop_table('customers')
    op.drop_index('ix_businesses_id', table_name='businesses')
    op.drop_table('businesses')
    op.add_column('notifications', sa.Column('client_id', sa.Integer(), nullable=False))
    op.drop_constraint(None, 'notifications', type_='foreignkey')
    op.create_foreign_key(None, 'notifications', 'clients', ['client_id'], ['id'])
    op.drop_column('notifications', 'recipient_id')
    op.add_column('reminders', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('reminders', sa.Column('reminder_type', sa.Enum('PAYMENT', 'DEADLINE', 'NOTIFICATION', name='remindertypeenum'), nullable=False))
    op.add_column('reminders', sa.Column('service_account_id', sa.Integer(), nullable=True))
    op.drop_constraint(None, 'reminders', type_='foreignkey')
    op.drop_constraint(None, 'reminders', type_='foreignkey')
    op.create_foreign_key(None, 'reminders', 'service_accounts', ['service_account_id'], ['id'])
    op.create_foreign_key(None, 'reminders', 'users', ['user_id'], ['id'])
    op.drop_column('reminders', 'created_by')
    op.drop_column('reminders', 'business_id')
    op.add_column('users', sa.Column('username', sa.String(length=255), nullable=False))
    op.add_column('users', sa.Column('first_name', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('business_name', sa.String(length=255), nullable=True))
    op.create_unique_constraint(None, 'users', ['username'])
    op.drop_column('users', 'full_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('full_name', sa.VARCHAR(length=255), nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'business_name')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'username')
    op.add_column('reminders', sa.Column('business_id', sa.INTEGER(), nullable=False))
    op.add_column('reminders', sa.Column('created_by', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'reminders', type_='foreignkey')
    op.drop_constraint(None, 'reminders', type_='foreignkey')
    op.create_foreign_key(None, 'reminders', 'users', ['created_by'], ['id'])
    op.create_foreign_key(None, 'reminders', 'businesses', ['business_id'], ['id'])
    op.drop_column('reminders', 'service_account_id')
    op.drop_column('reminders', 'reminder_type')
    op.drop_column('reminders', 'user_id')
    op.add_column('notifications', sa.Column('recipient_id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'notifications', type_='foreignkey')
    op.create_foreign_key(None, 'notifications', 'users', ['recipient_id'], ['id'])
    op.drop_column('notifications', 'client_id')
    op.create_table('businesses',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=20), nullable=True),
    sa.Column('address', sa.VARCHAR(length=500), nullable=True),
    sa.Column('owner_id', sa.INTEGER(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('smtp_host', sa.VARCHAR(length=255), nullable=True),
    sa.Column('smtp_port', sa.INTEGER(), nullable=True),
    sa.Column('smtp_user', sa.VARCHAR(length=255), nullable=True),
    sa.Column('smtp_password', sa.VARCHAR(length=500), nullable=True),
    sa.Column('email_from', sa.VARCHAR(length=255), nullable=True),
    sa.Column('twilio_account_sid', sa.VARCHAR(length=255), nullable=True),
    sa.Column('twilio_auth_token', sa.VARCHAR(length=500), nullable=True),
    sa.Column('twilio_phone_number', sa.VARCHAR(length=20), nullable=True),
    sa.Column('whatsapp_api_key', sa.VARCHAR(length=500), nullable=True),
    sa.Column('whatsapp_api_url', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_businesses_id', 'businesses', ['id'], unique=False)
    op.create_table('customers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('last_name', sa.VARCHAR(), nullable=True),
    sa.Column('age', sa.INTEGER(), nullable=True),
    sa.Column('gender', sa.VARCHAR(), nullable=True),
    sa.Column('birth_date', sa.DATE(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('address', sa.VARCHAR(), nullable=True),
    sa.Column('city', sa.VARCHAR(), nullable=True),
    sa.Column('province', sa.VARCHAR(), nullable=True),
    sa.Column('state', sa.VARCHAR(), nullable=True),
    sa.Column('zip_code', sa.VARCHAR(), nullable=True),
    sa.Column('country', sa.VARCHAR(), nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_customers_name', 'customers', ['name'], unique=False)
    op.create_index('ix_customers_last_name', 'customers', ['last_name'], unique=False)
    op.create_index('ix_customers_id', 'customers', ['id'], unique=False)
    op.create_index('ix_customers_email', 'customers', ['email'], unique=1)
    op.drop_index(op.f('ix_reminder_recipients_id'), table_name='reminder_recipients')
    op.drop_table('reminder_recipients')
    op.drop_index(op.f('ix_service_accounts_id'), table_name='service_accounts')
    op.drop_table('service_accounts')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_table('clients')
    # ### end Alembic commands ###
