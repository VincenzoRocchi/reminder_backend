# ======================================================================
# REMINDER APP ENVIRONMENT CONFIGURATION
# ======================================================================
#
# SETUP INSTRUCTIONS:
# 
# 1. SETTING THE ENVIRONMENT TYPE:
#    The ENV variable must be set OUTSIDE this file - not here!
#    
#    Set it in the terminal before running the app:
#      Linux/Mac:  export ENV=development
#      Windows:    set ENV=development  or  $env:ENV = "development"
#    
#    Or directly when launching:
#      ENV=development uvicorn app.main:app --reload
#    
#    Based on this ENV value, the app will load either:
#    - .env.development
#    - .env.testing 
#    - .env.production
#
# 2. CREATING YOUR ENV FILE:
#    Copy this example to create the appropriate file:
#      cp .env.example .env.development
#    
#    Then edit the file to set values for your environment.
#
# 3. SECURITY NOTE:
#    - Never commit your actual .env.* files to version control
#    - Use strong, unique values for sensitive settings like SECRET_KEY
#
# ======================================================================

# ======================================================================
# SERVER CONFIGURATION
# ======================================================================
SERVER_HOST=0.0.0.0               # The network interface to bind to
SERVER_PORT=5000                  # The port the server will listen on
SERVER_RELOAD=True                # Whether to enable auto-reload
SERVER_WORKERS=4                  # Number of worker processes
SERVER_LOG_LEVEL=info             # Server log level

# ======================================================================
# API CONFIGURATION
# ======================================================================
API_V1_STR=/api/v1                # API version prefix

# API Documentation
DOCS_URL=/docs                    # Swagger UI URL
REDOC_URL=/redoc                  # ReDoc UI URL
OPENAPI_URL=/openapi.json         # OpenAPI schema URL

# CORS Configuration
CORS_ORIGINS=["http://localhost:4200"]  # Allowed origins for CORS
CORS_ALLOW_CREDENTIALS=True       # Allow credentials in CORS requests

# ======================================================================
# DATABASE CONFIGURATION
# ======================================================================
# Main Database
DB_ENGINE=mysql+pymysql           # Database engine (mysql+pymysql, postgresql, sqlite)
DB_HOST=localhost                 # Host of the database server
DB_PORT=3306                      # Default port (3306 for MySQL, 5432 for PostgreSQL)
DB_USER=myuser                    # Database username
DB_PASSWORD=mypassword            # Database password
DB_NAME=reminder_app              # Database name

# Connection pool settings
DB_POOL_SIZE=5                    # Initial pool size
DB_MAX_OVERFLOW=10                # Extra connections when pool is full
DB_POOL_TIMEOUT=30                # Timeout for getting a connection (seconds)
SQL_ECHO=False                    # Enable SQL query logging

# Note: SQLite is ONLY for testing environment

# ======================================================================
# EVENT STORE CONFIGURATION
# ======================================================================
# Event database settings
EVENT_DB_ENGINE=mysql+pymysql     # Database engine for event store
EVENT_DB_HOST=localhost           # Host of the event database server
EVENT_DB_PORT=3306                # Default port (3306 for MySQL, 5432 for PostgreSQL)
EVENT_DB_USER=myuser              # Event database username 
EVENT_DB_PASSWORD=mypassword      # Event database password
EVENT_DB_NAME=events              # Event database name

# Alternative: direct connection string
# EVENT_STORE_URL=mysql+pymysql://myuser:mypassword@localhost:3306/events

# Event system behavior
EVENT_PERSISTENCE_ENABLED=True    # Enable storing events in the database
EVENT_RECOVERY_ENABLED=True       # Recover unprocessed events at startup
EVENT_RECOVERY_LIMIT=100          # Maximum events to recover at startup
EVENT_MAX_RETRIES=3               # Max retry attempts for failed events
EVENT_RETRY_DELAY=1.0             # Initial retry delay in seconds
EVENT_RETRY_BACKOFF=2.0           # Exponential backoff multiplier for retries

# Note: SQLite is ONLY for testing environment

# ======================================================================
# SECURITY CONFIGURATION
# ======================================================================
# Data Validation
STRICT_VALIDATION=True            # Enforce strict validation of sensitive data

# Authentication
SECRET_KEY=your-secret-key-here   # Secret key for JWT token signing
                                  # Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
ALGORITHM=HS256                   # Algorithm for JWT tokens
ACCESS_TOKEN_EXPIRE_MINUTES=60    # Access token lifetime
REFRESH_TOKEN_EXPIRE_DAYS=30      # Refresh token lifetime
PASSWORD_RESET_TOKEN_EXPIRE_MINUTES=30  # Password reset token expiration

# Cookie Security (for production)
SECURE_COOKIES=true               # Use secure cookies in production

# ======================================================================
# STORAGE CONFIGURATION
# ======================================================================
STORAGE_TYPE=local                # Storage type: 'local' or 's3'

# S3 Configuration (only if STORAGE_TYPE=s3)
S3_BUCKET_NAME=your-bucket-name   # S3 bucket name
S3_ACCESS_KEY=your_s3_access_key  # S3 access key
S3_SECRET_KEY=your_s3_secret_key  # S3 secret key
S3_REGION=us-east-1               # S3 region
S3_OBJECT_ACL=private             # S3 object ACL (private or public-read)

# ======================================================================
# SCHEDULER CONFIGURATION
# ======================================================================
SCHEDULER_TIMEZONE=UTC            # Timezone for scheduled tasks
DISABLE_SCHEDULER=false           # Disable the scheduler service completely

# ======================================================================
# MESSAGING SERVICE CONFIGURATION
# ======================================================================
# Twilio Configuration (SMS & WhatsApp)
TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxx  # Twilio account SID
TWILIO_AUTH_TOKEN=xxxxxxxxxxxxxxxx   # Twilio auth token
TWILIO_PHONE_NUMBER=your_twilio_phone # Twilio phone number

# ======================================================================
# PAYMENT SERVICE CONFIGURATION
# ======================================================================
# Stripe
STRIPE_API_KEY=your_stripe_api_key         # Stripe API key
STRIPE_WEBHOOK_SECRET=your_webhook_secret  # Stripe webhook secret
PAYMENT_SUCCESS_URL=http://localhost:3000/payment/success  # Redirect URL after successful payment
PAYMENT_CANCEL_URL=http://localhost:3000/payment/cancel    # Redirect URL after canceled payment

# ======================================================================
# PERFORMANCE & MONITORING
# ======================================================================
# Rate Limiting
RATE_LIMIT_ENABLED=true           # Enable rate limiting
DEFAULT_RATE_LIMIT=100/minute     # Default rate limit

# Redis Configuration
REDIS_URL=redis://localhost:6379/0  # Redis connection URL
REDIS_PASSWORD=your_redis_password  # Redis password (optional for local development)
REDIS_SSL_ENABLED=false           # Enable SSL for Redis connection
REDIS_CONNECTION_TIMEOUT=5        # Connection timeout in seconds
REDIS_HEALTH_CHECK_INTERVAL=30    # Health check interval in seconds
USE_REDIS=false                   # Enable Redis for caching and session storage

# ======================================================================
# LOGGING CONFIGURATION
# ======================================================================
LOG_LEVEL=INFO                    # Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s  # Log format

# ======================================================================
# ENVIRONMENT-SPECIFIC NOTES
# ======================================================================
# DEVELOPMENT:
# - Set SERVER_RELOAD=true and LOG_LEVEL=DEBUG for better development experience
# - Must use a proper database engine (mysql+pymysql, postgresql), not SQLite

# TESTING:
# - SQLite is allowed: DB_ENGINE=sqlite and DB_NAME=./test.db
# - Set SERVER_HOST=127.0.0.1 and SERVER_WORKERS=1
# - Set SQL_ECHO=true for debugging SQL queries

# PRODUCTION:
# - Use strong, unique SECRET_KEY (at least 32 characters)
# - Set SERVER_RELOAD=false and more SERVER_WORKERS
# - Use AWS RDS or other managed database service
# - Enable SECURE_COOKIES and SSL_ENABLED options
# - Set up proper CORS_ORIGINS with production domains
# - Configure S3 for file storage
# - Consider using a secrets manager instead of .env files