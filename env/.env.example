# ======================================================================
# REMINDER APP ENVIRONMENT CONFIGURATION EXAMPLE
# ======================================================================
#
# SETUP INSTRUCTIONS:
# 
# 1. SETTING THE ENVIRONMENT TYPE:
#    The ENV variable must be set OUTSIDE this file - not here!
#    
#    Set it in the terminal before running the app:
#      Linux/Mac:  export ENV=development
#      Windows:    set ENV=development  or  $env:ENV = "development"
#    
#    Or directly when launching:
#      ENV=development uvicorn app.main:app --reload
#    
#    Based on this ENV value, the app will load either:
#    - .env.development
#    - .env.testing 
#    - .env.production
#
# 2. CREATING YOUR ENV FILE:
#    Copy this example to create the appropriate file:
#      cp .env.example .env.development
#    
#    Then edit the file to set values for your environment.
#
# 3. SECURITY NOTE:
#    - Never commit your actual .env.* files to version control
#    - Use strong, unique values for sensitive settings like SECRET_KEY
#
# ======================================================================

# ======================================================================
# COMMON CONFIGURATION FOR ALL ENVIRONMENTS
# ======================================================================

# ======================================================================
# SERVER CONFIGURATION
# ======================================================================
SERVER_HOST=0.0.0.0               # The network interface to bind to
SERVER_PORT=5000                  # The port the server will listen on
SERVER_RELOAD=false               # Whether to enable auto-reload
SERVER_WORKERS=4                  # Number of worker processes
SERVER_LOG_LEVEL=info             # Server log level

# ======================================================================
# DATA VALIDATION CONFIGURATION
# ======================================================================
# Whether to enforce strict validation of sensitive data
STRICT_VALIDATION=True

# ======================================================================
# DATABASE CONFIGURATION
# ======================================================================
# Database engine selection
DB_ENGINE=mysql+pymysql            # Database engine (mysql+pymysql, postgresql, sqlite)

# Database connection details
DB_HOST=localhost                 # Host of the database server
DB_PORT=3306                      # Default port (3306 for MySQL, 5432 for PostgreSQL)
DB_USER=your_db_username          # Database username
DB_PASSWORD=your_db_password      # Database password
DB_NAME=reminder_app_db           # Database name

# Connection pool settings
DB_POOL_SIZE=5                    # Initial pool size
DB_MAX_OVERFLOW=10                # Extra connections when pool is full
DB_POOL_TIMEOUT=30                # Timeout for getting a connection (seconds)

# Secret key for JWT token signing and encryption
# CRITICAL: Use a strong, unique value in production!
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-secret-key-here

# JWT configuration
ALGORITHM=HS256                            # Algorithm for JWT tokens                  # Prefix for Authorization header
ACCESS_TOKEN_EXPIRE_MINUTES=30             # Access token lifetime
REFRESH_TOKEN_EXPIRE_DAYS=7                # Refresh token lifetime
PASSWORD_RESET_TOKEN_EXPIRE_MINUTES=15     # Password reset token lifetime

# API version prefix
API_V1_STR=/api/v1                         

# API Documentation URLs (set empty to disable)
DOCS_URL=/docs                             # Swagger UI URL
REDOC_URL=/redoc                           # ReDoc UI URL
OPENAPI_URL=/openapi.json                  # OpenAPI schema URL

# Allowed origins for CORS requests (comma-separated or JSON array)
CORS_ORIGINS=["http://localhost:3000", "http://localhost:4200"]
CORS_ALLOW_CREDENTIALS=True                # Allow credentials in CORS requests

# Storage type: 'local' or 's3'
STORAGE_TYPE=local                         

# Scheduler for reminders
SCHEDULER_TIMEZONE=UTC                     # Timezone for scheduled tasks
DISABLE_SCHEDULER=false                    # Disable the scheduler service completely

# ======================================================================
# ENVIRONMENT-SPECIFIC CONFIGURATIONS
# ======================================================================

# =====================
# DEVELOPMENT ENVIRONMENT (.env.development)
# =====================

# Set these values in your .env.development file:

# Server (development)
# SERVER_HOST=0.0.0.0
# SERVER_PORT=5000
# SERVER_RELOAD=false
# SERVER_WORKERS=4
# SERVER_LOG_LEVEL=info

# Database (development)
# DB_ENGINE=mysql+pymysql
# DB_HOST=localhost
# DB_PORT=3306
# DB_USER=root
# DB_PASSWORD=your_dev_password
# DB_NAME=reminder_app_dev

# Security (development)
# SECRET_KEY=your_dev_secret_key

# Logging (development)
# LOG_LEVEL=INFO

# Storage (development)
# STORAGE_TYPE=local

# CORS (development)
# CORS_ORIGINS=["http://localhost:4200", "http://localhost:3000"]

# Redis (development)
# REDIS_URL=redis://localhost:6379/0
# REDIS_PASSWORD=
# REDIS_SSL_ENABLED=false
# REDIS_CONNECTION_TIMEOUT=5
# REDIS_HEALTH_CHECK_INTERVAL=30

# =====================
# TESTING ENVIRONMENT (.env.testing)
# =====================

# Set these values in your .env.testing file:

# Server (testing)
# SERVER_HOST=127.0.0.1
# SERVER_PORT=8000
# SERVER_RELOAD=true
# SERVER_WORKERS=1
# SERVER_LOG_LEVEL=debug

# Database (testing)
# DB_ENGINE=sqlite
# DB_NAME=./test.db
# SQL_ECHO=true

# Security (testing)
# SECRET_KEY=testing-secret-key-not-for-production-use

# Rate limiting (testing)
# RATE_LIMIT_ENABLED=false
# DEFAULT_RATE_LIMIT=1000/minute

# Logging (testing)
# LOG_LEVEL=DEBUG

# Server (testing)
# SERVER_HOST=127.0.0.1
# SERVER_PORT=8000

# Scheduler (testing)
# DISABLE_SCHEDULER=false

# Redis (testing)
# USE_REDIS=false

# =====================
# PRODUCTION ENVIRONMENT (.env.production)
# =====================

# Set these values in your .env.production file:

# Server (production)
# SERVER_HOST=0.0.0.0
# SERVER_PORT=5000
# SERVER_RELOAD=false
# SERVER_WORKERS=4
# SERVER_LOG_LEVEL=warning

# Database (production)
# DB_ENGINE=mysql+pymysql
# DB_HOST=your-aws-rds-endpoint.region.rds.amazonaws.com
# DB_PORT=3306
# DB_USER=app_user
# DB_PASSWORD=your_strong_production_password
# DB_NAME=reminder_app_prod
# DB_POOL_SIZE=10
# DB_MAX_OVERFLOW=20

# Security (production)
# SECRET_KEY=your-very-long-and-secure-production-secret-key-min-32-chars

# CORS (production)
# CORS_ORIGINS=["https://your-production-domain.com","https://www.your-production-domain.com"]

# S3 Storage (production)
# STORAGE_TYPE=s3
# S3_BUCKET_NAME=your-production-bucket
# S3_ACCESS_KEY=your_aws_access_key
# S3_SECRET_KEY=your_aws_secret_key
# S3_REGION=eu-west-1
# S3_OBJECT_ACL=private

# Twilio (production)
# TWILIO_ACCOUNT_SID=your_twilio_live_sid
# TWILIO_AUTH_TOKEN=your_twilio_live_token
# TWILIO_PHONE_NUMBER=your_twilio_live_phone

# Rate limiting (production)
# RATE_LIMIT_ENABLED=true
# DEFAULT_RATE_LIMIT=60/minute

# Cookie security (production)
# SECURE_COOKIES=true

# Logging (production)
# LOG_LEVEL=INFO

# Redis (production)
# REDIS_URL=redis://your-redis-endpoint:6379/0
# REDIS_PASSWORD=your_strong_redis_password
# REDIS_SSL_ENABLED=true
# REDIS_CONNECTION_TIMEOUT=5
# REDIS_HEALTH_CHECK_INTERVAL=30

# ======================================================================
# EXTERNAL SERVICES (CONFIGURE AS NEEDED)
# ======================================================================

# SMS SERVICE (TWILIO)
# =====================
TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxx  # Twilio account SID
TWILIO_AUTH_TOKEN=xxxxxxxxxxxxxxxx   # Twilio auth token
TWILIO_PHONE_NUMBER=your_twilio_phone # Twilio phone number

# PAYMENT SERVICE (STRIPE)
# =====================
STRIPE_API_KEY=your_stripe_api_key         # Stripe API key
STRIPE_WEBHOOK_SECRET=your_webhook_secret  # Stripe webhook secret
PAYMENT_SUCCESS_URL=http://localhost:3000/payment/success  # Redirect URL after successful payment
PAYMENT_CANCEL_URL=http://localhost:3000/payment/cancel    # Redirect URL after canceled payment

# CLOUD STORAGE (S3)
# =====================
# Only needed if STORAGE_TYPE=s3
S3_BUCKET_NAME=your-bucket-name            # S3 bucket name
S3_ACCESS_KEY=your_s3_access_key           # S3 access key
S3_SECRET_KEY=your_s3_secret_key           # S3 secret key
S3_REGION=us-east-1                        # S3 region
S3_OBJECT_ACL=private                      # S3 object ACL (private or public-read)

# RATE LIMITING
# =====================
RATE_LIMIT_ENABLED=true                    # Enable rate limiting
DEFAULT_RATE_LIMIT=100/minute              # Default rate limit

# LOGGING
# =====================
LOG_LEVEL=INFO                             # Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s  # Log format

# REDIS
# =====================
REDIS_URL=redis://localhost:6379/0         # Redis connection URL
REDIS_PASSWORD=your_redis_password         # Redis password (optional for local development)
REDIS_SSL_ENABLED=false                   # Enable SSL for Redis connection
REDIS_CONNECTION_TIMEOUT=5                 # Connection timeout in seconds
REDIS_HEALTH_CHECK_INTERVAL=30             # Health check interval in seconds

# ======================================================================
# SENSITIVE INFORMATION MANAGEMENT BEST PRACTICES
# ======================================================================
# 1. Keep different .env files for different environments
# 2. For production, consider using:
#    - Environment variables set at the system/container level
#    - AWS Secrets Manager, Azure Key Vault, or similar service
#    - Kubernetes Secrets for containerized deployments
# 3. NEVER commit .env files with real credentials to version control
# 4. Use strong, unique passwords and rotate them regularly
# 5. Lock down access to production credentials to authorized personnel only